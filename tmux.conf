# powerline
set-option -g status on
# use UTF8
# set -g utf8 # deprecated?
# set-window-option -g utf8 on

set -g mouse on

set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/code/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/code/tmux-powerline/powerline.sh right)"
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
set -g history-limit 5000

set -g default-terminal "screen-256color"
set -g prefix C-a
bind-key a send-prefix
bind-key -n C-l clear-history \; send-keys -R

# quick pane cycling
# don't need this since I have the C-hjkl
# unbind ^A
# bind ^A select-pane -t :.+

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

set -sg escape-time 0
# set -g default-command "reattach-to-user-namespace -l zsh"
# Vim style navigation in copy mode
setw -g mode-keys vi

bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
# bind-key -T copy-mode C-\ send-keys -X copy-pipe-and-cancel "pbcopy"

# Bind ']' to use pbbaste
# bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# olde
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
bind | split-window -h
bind _ split-window -v

bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l" #deprecated?
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l


# swap window to left or right
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1
